// source: proto/request.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var proto_order_pb = require('../proto/order_pb.js');
goog.object.extend(proto, proto_order_pb);
goog.exportSymbol('proto.request.Add', null, global);
goog.exportSymbol('proto.request.Cancel', null, global);
goog.exportSymbol('proto.request.Modify', null, global);
goog.exportSymbol('proto.request.Request', null, global);
goog.exportSymbol('proto.request.Request.CommandCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.request.Add = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.request.Add, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.request.Add.displayName = 'proto.request.Add';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.request.Cancel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.request.Cancel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.request.Cancel.displayName = 'proto.request.Cancel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.request.Modify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.request.Modify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.request.Modify.displayName = 'proto.request.Modify';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.request.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.request.Request.oneofGroups_);
};
goog.inherits(proto.request.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.request.Request.displayName = 'proto.request.Request';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.request.Add.prototype.toObject = function(opt_includeInstance) {
  return proto.request.Add.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.request.Add} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.request.Add.toObject = function(includeInstance, msg) {
  var f, obj = {
    order: (f = msg.getOrder()) && proto_order_pb.Order.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.request.Add}
 */
proto.request.Add.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.request.Add;
  return proto.request.Add.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.request.Add} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.request.Add}
 */
proto.request.Add.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_order_pb.Order;
      reader.readMessage(value,proto_order_pb.Order.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.request.Add.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.request.Add.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.request.Add} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.request.Add.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_order_pb.Order.serializeBinaryToWriter
    );
  }
};


/**
 * optional order.Order order = 1;
 * @return {?proto.order.Order}
 */
proto.request.Add.prototype.getOrder = function() {
  return /** @type{?proto.order.Order} */ (
    jspb.Message.getWrapperField(this, proto_order_pb.Order, 1));
};


/**
 * @param {?proto.order.Order|undefined} value
 * @return {!proto.request.Add} returns this
*/
proto.request.Add.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.request.Add} returns this
 */
proto.request.Add.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.request.Add.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.request.Cancel.prototype.toObject = function(opt_includeInstance) {
  return proto.request.Cancel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.request.Cancel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.request.Cancel.toObject = function(includeInstance, msg) {
  var f, obj = {
    side: jspb.Message.getFieldWithDefault(msg, 1, 0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    orderId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.request.Cancel}
 */
proto.request.Cancel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.request.Cancel;
  return proto.request.Cancel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.request.Cancel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.request.Cancel}
 */
proto.request.Cancel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.order.OrderSide} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOrderId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.request.Cancel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.request.Cancel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.request.Cancel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.request.Cancel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getOrderId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional order.OrderSide side = 1;
 * @return {!proto.order.OrderSide}
 */
proto.request.Cancel.prototype.getSide = function() {
  return /** @type {!proto.order.OrderSide} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.order.OrderSide} value
 * @return {!proto.request.Cancel} returns this
 */
proto.request.Cancel.prototype.setSide = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional double price = 2;
 * @return {number}
 */
proto.request.Cancel.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.request.Cancel} returns this
 */
proto.request.Cancel.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional uint32 order_id = 3;
 * @return {number}
 */
proto.request.Cancel.prototype.getOrderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.request.Cancel} returns this
 */
proto.request.Cancel.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.request.Modify.prototype.toObject = function(opt_includeInstance) {
  return proto.request.Modify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.request.Modify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.request.Modify.toObject = function(includeInstance, msg) {
  var f, obj = {
    order: (f = msg.getOrder()) && proto_order_pb.Order.toObject(includeInstance, f),
    newPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    newAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.request.Modify}
 */
proto.request.Modify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.request.Modify;
  return proto.request.Modify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.request.Modify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.request.Modify}
 */
proto.request.Modify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_order_pb.Order;
      reader.readMessage(value,proto_order_pb.Order.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNewPrice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNewAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.request.Modify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.request.Modify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.request.Modify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.request.Modify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_order_pb.Order.serializeBinaryToWriter
    );
  }
  f = message.getNewPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getNewAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional order.Order order = 1;
 * @return {?proto.order.Order}
 */
proto.request.Modify.prototype.getOrder = function() {
  return /** @type{?proto.order.Order} */ (
    jspb.Message.getWrapperField(this, proto_order_pb.Order, 1));
};


/**
 * @param {?proto.order.Order|undefined} value
 * @return {!proto.request.Modify} returns this
*/
proto.request.Modify.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.request.Modify} returns this
 */
proto.request.Modify.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.request.Modify.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double new_price = 2;
 * @return {number}
 */
proto.request.Modify.prototype.getNewPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.request.Modify} returns this
 */
proto.request.Modify.prototype.setNewPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double new_amount = 3;
 * @return {number}
 */
proto.request.Modify.prototype.getNewAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.request.Modify} returns this
 */
proto.request.Modify.prototype.setNewAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.request.Request.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.request.Request.CommandCase = {
  COMMAND_NOT_SET: 0,
  ADD: 1,
  CANCEL: 2,
  MODIFY: 3
};

/**
 * @return {proto.request.Request.CommandCase}
 */
proto.request.Request.prototype.getCommandCase = function() {
  return /** @type {proto.request.Request.CommandCase} */(jspb.Message.computeOneofCase(this, proto.request.Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.request.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.request.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.request.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.request.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    add: (f = msg.getAdd()) && proto.request.Add.toObject(includeInstance, f),
    cancel: (f = msg.getCancel()) && proto.request.Cancel.toObject(includeInstance, f),
    modify: (f = msg.getModify()) && proto.request.Modify.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.request.Request}
 */
proto.request.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.request.Request;
  return proto.request.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.request.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.request.Request}
 */
proto.request.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.request.Add;
      reader.readMessage(value,proto.request.Add.deserializeBinaryFromReader);
      msg.setAdd(value);
      break;
    case 2:
      var value = new proto.request.Cancel;
      reader.readMessage(value,proto.request.Cancel.deserializeBinaryFromReader);
      msg.setCancel(value);
      break;
    case 3:
      var value = new proto.request.Modify;
      reader.readMessage(value,proto.request.Modify.deserializeBinaryFromReader);
      msg.setModify(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.request.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.request.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.request.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.request.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdd();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.request.Add.serializeBinaryToWriter
    );
  }
  f = message.getCancel();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.request.Cancel.serializeBinaryToWriter
    );
  }
  f = message.getModify();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.request.Modify.serializeBinaryToWriter
    );
  }
};


/**
 * optional Add add = 1;
 * @return {?proto.request.Add}
 */
proto.request.Request.prototype.getAdd = function() {
  return /** @type{?proto.request.Add} */ (
    jspb.Message.getWrapperField(this, proto.request.Add, 1));
};


/**
 * @param {?proto.request.Add|undefined} value
 * @return {!proto.request.Request} returns this
*/
proto.request.Request.prototype.setAdd = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.request.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.request.Request} returns this
 */
proto.request.Request.prototype.clearAdd = function() {
  return this.setAdd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.request.Request.prototype.hasAdd = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Cancel cancel = 2;
 * @return {?proto.request.Cancel}
 */
proto.request.Request.prototype.getCancel = function() {
  return /** @type{?proto.request.Cancel} */ (
    jspb.Message.getWrapperField(this, proto.request.Cancel, 2));
};


/**
 * @param {?proto.request.Cancel|undefined} value
 * @return {!proto.request.Request} returns this
*/
proto.request.Request.prototype.setCancel = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.request.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.request.Request} returns this
 */
proto.request.Request.prototype.clearCancel = function() {
  return this.setCancel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.request.Request.prototype.hasCancel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Modify modify = 3;
 * @return {?proto.request.Modify}
 */
proto.request.Request.prototype.getModify = function() {
  return /** @type{?proto.request.Modify} */ (
    jspb.Message.getWrapperField(this, proto.request.Modify, 3));
};


/**
 * @param {?proto.request.Modify|undefined} value
 * @return {!proto.request.Request} returns this
*/
proto.request.Request.prototype.setModify = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.request.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.request.Request} returns this
 */
proto.request.Request.prototype.clearModify = function() {
  return this.setModify(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.request.Request.prototype.hasModify = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.request);
