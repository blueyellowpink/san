"use strict";
// source: proto/orderbook.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();
goog.exportSymbol('proto.orderbook.OrderBook', null, global);
goog.exportSymbol('proto.orderbook.PriceSizePair', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.orderbook.OrderBook = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.orderbook.OrderBook.repeatedFields_, null);
};
goog.inherits(proto.orderbook.OrderBook, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.orderbook.OrderBook.displayName = 'proto.orderbook.OrderBook';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.orderbook.PriceSizePair = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.orderbook.PriceSizePair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.orderbook.PriceSizePair.displayName = 'proto.orderbook.PriceSizePair';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.orderbook.OrderBook.repeatedFields_ = [1, 2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.orderbook.OrderBook.prototype.toObject = function (opt_includeInstance) {
        return proto.orderbook.OrderBook.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.orderbook.OrderBook} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.orderbook.OrderBook.toObject = function (includeInstance, msg) {
        var f, obj = {
            askPairsList: jspb.Message.toObjectList(msg.getAskPairsList(), proto.orderbook.PriceSizePair.toObject, includeInstance),
            bidPairsList: jspb.Message.toObjectList(msg.getBidPairsList(), proto.orderbook.PriceSizePair.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.orderbook.OrderBook}
 */
proto.orderbook.OrderBook.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.orderbook.OrderBook;
    return proto.orderbook.OrderBook.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.orderbook.OrderBook} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.orderbook.OrderBook}
 */
proto.orderbook.OrderBook.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.orderbook.PriceSizePair;
                reader.readMessage(value, proto.orderbook.PriceSizePair.deserializeBinaryFromReader);
                msg.addAskPairs(value);
                break;
            case 2:
                var value = new proto.orderbook.PriceSizePair;
                reader.readMessage(value, proto.orderbook.PriceSizePair.deserializeBinaryFromReader);
                msg.addBidPairs(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.orderbook.OrderBook.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.orderbook.OrderBook.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.orderbook.OrderBook} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderbook.OrderBook.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getAskPairsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.orderbook.PriceSizePair.serializeBinaryToWriter);
    }
    f = message.getBidPairsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.orderbook.PriceSizePair.serializeBinaryToWriter);
    }
};
/**
 * repeated PriceSizePair ask_pairs = 1;
 * @return {!Array<!proto.orderbook.PriceSizePair>}
 */
proto.orderbook.OrderBook.prototype.getAskPairsList = function () {
    return /** @type{!Array<!proto.orderbook.PriceSizePair>} */ (jspb.Message.getRepeatedWrapperField(this, proto.orderbook.PriceSizePair, 1));
};
/**
 * @param {!Array<!proto.orderbook.PriceSizePair>} value
 * @return {!proto.orderbook.OrderBook} returns this
*/
proto.orderbook.OrderBook.prototype.setAskPairsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.orderbook.PriceSizePair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.orderbook.PriceSizePair}
 */
proto.orderbook.OrderBook.prototype.addAskPairs = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.orderbook.PriceSizePair, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.orderbook.OrderBook} returns this
 */
proto.orderbook.OrderBook.prototype.clearAskPairsList = function () {
    return this.setAskPairsList([]);
};
/**
 * repeated PriceSizePair bid_pairs = 2;
 * @return {!Array<!proto.orderbook.PriceSizePair>}
 */
proto.orderbook.OrderBook.prototype.getBidPairsList = function () {
    return /** @type{!Array<!proto.orderbook.PriceSizePair>} */ (jspb.Message.getRepeatedWrapperField(this, proto.orderbook.PriceSizePair, 2));
};
/**
 * @param {!Array<!proto.orderbook.PriceSizePair>} value
 * @return {!proto.orderbook.OrderBook} returns this
*/
proto.orderbook.OrderBook.prototype.setBidPairsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.orderbook.PriceSizePair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.orderbook.PriceSizePair}
 */
proto.orderbook.OrderBook.prototype.addBidPairs = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.orderbook.PriceSizePair, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.orderbook.OrderBook} returns this
 */
proto.orderbook.OrderBook.prototype.clearBidPairsList = function () {
    return this.setBidPairsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.orderbook.PriceSizePair.prototype.toObject = function (opt_includeInstance) {
        return proto.orderbook.PriceSizePair.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.orderbook.PriceSizePair} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.orderbook.PriceSizePair.toObject = function (includeInstance, msg) {
        var f, obj = {
            price: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
            size: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.orderbook.PriceSizePair}
 */
proto.orderbook.PriceSizePair.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.orderbook.PriceSizePair;
    return proto.orderbook.PriceSizePair.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.orderbook.PriceSizePair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.orderbook.PriceSizePair}
 */
proto.orderbook.PriceSizePair.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPrice(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setSize(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.orderbook.PriceSizePair.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.orderbook.PriceSizePair.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.orderbook.PriceSizePair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderbook.PriceSizePair.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getPrice();
    if (f !== 0.0) {
        writer.writeDouble(1, f);
    }
    f = message.getSize();
    if (f !== 0.0) {
        writer.writeDouble(2, f);
    }
};
/**
 * optional double price = 1;
 * @return {number}
 */
proto.orderbook.PriceSizePair.prototype.getPrice = function () {
    return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};
/**
 * @param {number} value
 * @return {!proto.orderbook.PriceSizePair} returns this
 */
proto.orderbook.PriceSizePair.prototype.setPrice = function (value) {
    return jspb.Message.setProto3FloatField(this, 1, value);
};
/**
 * optional double size = 2;
 * @return {number}
 */
proto.orderbook.PriceSizePair.prototype.getSize = function () {
    return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};
/**
 * @param {number} value
 * @return {!proto.orderbook.PriceSizePair} returns this
 */
proto.orderbook.PriceSizePair.prototype.setSize = function (value) {
    return jspb.Message.setProto3FloatField(this, 2, value);
};
goog.object.extend(exports, proto.orderbook);
//# sourceMappingURL=orderbook_pb.js.map